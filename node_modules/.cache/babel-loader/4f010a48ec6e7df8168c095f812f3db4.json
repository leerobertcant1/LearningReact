{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\src\\\\components\\\\ManageCoursePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm.js\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManageCoursePage = props => {\n  const _useState = useState(courseStore.getCourses()),\n        _useState2 = _slicedToArray(_useState, 2),\n        courses = _useState2[0],\n        setCourses = _useState2[1];\n\n  const _useState3 = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        course = _useState4[0],\n        setCourse = _useState4[1];\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  } //Re-run each time React re-renders.\n\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    const slug = props.match.params.slug;\n\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n\n    return () => courseStore.removeChangeListener(onChange);\n  }, [courses.length, props.match.params.slug]);\n\n  function handleChange({\n    target\n  }) {\n    setCourse(_objectSpread({}, course, {\n      [target.name]: target.value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved\");\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage;","map":{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\LearningReact\\src\\components\\ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseStore","toast","courseActions","ManageCoursePage","props","getCourses","courses","setCourses","id","slug","title","authorId","category","course","setCourse","onChange","addChangeListener","match","params","length","loadCourses","getCourseBySlug","removeChangeListener","handleChange","target","name","value","handleSubmit","event","preventDefault","saveCourse","then","history","push","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,0BAA/B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,oBACFP,QAAQ,CAACG,WAAW,CAACK,UAAZ,EAAD,CADN;AAAA;AAAA,QACzBC,OADyB;AAAA,QAChBC,UADgB;;AAAA,qBAEJV,QAAQ,CAAC;AACnCW,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE,IAJyB;AAKnCC,IAAAA,QAAQ,EAAE;AALyB,GAAD,CAFJ;AAAA;AAAA,QAEzBC,MAFyB;AAAA,QAEjBC,SAFiB;;AAUhC,WAASC,QAAT,GAAoB;AAClBR,IAAAA,UAAU,CAACP,WAAW,CAACK,UAAZ,EAAD,CAAV;AACD,GAZ+B,CAchC;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACgB,iBAAZ,CAA8BD,QAA9B;AACA,UAAMN,IAAI,GAAGL,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBT,IAAhC;;AAEA,QAAIH,OAAO,CAACa,MAAR,KAAmB,CAAvB,EAA0B;AACxBjB,MAAAA,aAAa,CAACkB,WAAd;AACD,KAFD,MAEO,IAAIX,IAAJ,EAAU;AACfK,MAAAA,SAAS,CAACd,WAAW,CAACqB,eAAZ,CAA4BZ,IAA5B,CAAD,CAAT;AACD;;AACD,WAAO,MAAMT,WAAW,CAACsB,oBAAZ,CAAiCP,QAAjC,CAAb;AACD,GAVQ,EAUN,CAACT,OAAO,CAACa,MAAT,EAAiBf,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBT,IAApC,CAVM,CAAT;;AAYA,WAASc,YAAT,CAAsB;AAAEC,IAAAA;AAAF,GAAtB,EAAkC;AAChCV,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACW,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAApC,OAAT;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA3B,IAAAA,aAAa,CAAC4B,UAAd,CAAyBjB,MAAzB,EAAiCkB,IAAjC,CAAsC,MAAM;AAC1C3B,MAAAA,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACAhC,MAAAA,KAAK,CAACiC,OAAN,CAAc,cAAd;AACD,KAHD;AAID;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAErB,MADV;AAEE,IAAA,QAAQ,EAAEU,YAFZ;AAGE,IAAA,QAAQ,EAAEI,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAjDD;;AAmDA,eAAexB,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CourseForm from \"./CourseForm.js\";\r\nimport courseStore from \"../stores/courseStore\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as courseActions from \"../actions/courseActions\";\r\n\r\nconst ManageCoursePage = props => {\r\n  const [courses, setCourses] = useState(courseStore.getCourses());\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    title: \"\",\r\n    authorId: null,\r\n    category: \"\"\r\n  });\r\n\r\n  function onChange() {\r\n    setCourses(courseStore.getCourses());\r\n  }\r\n\r\n  //Re-run each time React re-renders.\r\n  useEffect(() => {\r\n    courseStore.addChangeListener(onChange);\r\n    const slug = props.match.params.slug;\r\n\r\n    if (courses.length === 0) {\r\n      courseActions.loadCourses();\r\n    } else if (slug) {\r\n      setCourse(courseStore.getCourseBySlug(slug));\r\n    }\r\n    return () => courseStore.removeChangeListener(onChange);\r\n  }, [courses.length, props.match.params.slug]);\r\n\r\n  function handleChange({ target }) {\r\n    setCourse({ ...course, [target.name]: target.value });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    courseActions.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\");\r\n      toast.success(\"Course saved\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Manage Course</h2>\r\n      <CourseForm\r\n        course={course}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n"]},"metadata":{},"sourceType":"module"}