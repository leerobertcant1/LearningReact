{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\src\\\\components\\\\ManageCoursePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm.js\";\nimport * as courseApi from \"../api/courseApi\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const _useState = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        course = _useState2[0],\n        setCourse = _useState2[1];\n\n  useEffect(() => {\n    const slug = props.match.params.slug;\n\n    if (slug) {\n      courseApi.getCourseBySlug(slug).then(_course => setCourse(_course));\n    }\n  });\n\n  function handleChange({\n    target\n  }) {\n    setCourse(_objectSpread({}, course, {\n      [target.name]: target.value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    courseApi.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved\");\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage;","map":{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\LearningReact\\src\\components\\ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseApi","toast","ManageCoursePage","props","id","slug","title","authorId","category","course","setCourse","match","params","getCourseBySlug","then","_course","handleChange","target","name","value","handleSubmit","event","preventDefault","saveCourse","history","push","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,oBACJN,QAAQ,CAAC;AACnCO,IAAAA,EAAE,EAAE,IAD+B;AAEnCC,IAAAA,IAAI,EAAE,EAF6B;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE,IAJyB;AAKnCC,IAAAA,QAAQ,EAAE;AALyB,GAAD,CADJ;AAAA;AAAA,QACzBC,MADyB;AAAA,QACjBC,SADiB;;AAShCZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,IAAI,GAAGF,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBP,IAAhC;;AAEA,QAAIA,IAAJ,EAAU;AACRL,MAAAA,SAAS,CAACa,eAAV,CAA0BR,IAA1B,EAAgCS,IAAhC,CAAqCC,OAAO,IAAIL,SAAS,CAACK,OAAD,CAAzD;AACD;AACF,GANQ,CAAT;;AAQA,WAASC,YAAT,CAAsB;AAAEC,IAAAA;AAAF,GAAtB,EAAkC;AAChCP,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACQ,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAApC,OAAT;AACD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAtB,IAAAA,SAAS,CAACuB,UAAV,CAAqBd,MAArB,EAA6BK,IAA7B,CAAkC,MAAM;AACtCX,MAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACAxB,MAAAA,KAAK,CAACyB,OAAN,CAAc,cAAd;AACD,KAHD;AAID;;AAED,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEjB,MADV;AAEE,IAAA,QAAQ,EAAEO,YAFZ;AAGE,IAAA,QAAQ,EAAEI,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAvCD;;AAyCA,eAAelB,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CourseForm from \"./CourseForm.js\";\r\nimport * as courseApi from \"../api/courseApi\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ManageCoursePage = props => {\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    title: \"\",\r\n    authorId: null,\r\n    category: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    const slug = props.match.params.slug;\r\n\r\n    if (slug) {\r\n      courseApi.getCourseBySlug(slug).then(_course => setCourse(_course));\r\n    }\r\n  });\r\n\r\n  function handleChange({ target }) {\r\n    setCourse({ ...course, [target.name]: target.value });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    courseApi.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\");\r\n      toast.success(\"Course saved\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Manage Course</h2>\r\n      <CourseForm\r\n        course={course}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n"]},"metadata":{},"sourceType":"module"}