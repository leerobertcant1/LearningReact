{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee\\\\Documents\\\\GitHub\\\\LearningReact\\\\src\\\\components\\\\Common\\\\TextInput.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\";\n\n  if (props.error.length > 0) {\n    wrapperClass += \" has-error\";\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.label), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: props.id,\n    type: \"text\",\n    onChange: props.onChange,\n    name: props.name,\n    className: \"form-control\",\n    value: props.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), props.error && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.error));\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\nTextInput.defaultProps = {\n  error: \"\"\n};\nexport default TextInput;","map":{"version":3,"sources":["C:\\Users\\Lee\\Documents\\GitHub\\LearningReact\\src\\components\\Common\\TextInput.js"],"names":["React","PropTypes","TextInput","props","wrapperClass","error","length","id","label","onChange","name","value","propTypes","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,YAAY,GAAG,YAAnB;;AAEA,MAAID,KAAK,CAACE,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,YAAY,IAAI,YAAhB;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAED,KAAK,CAACI,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,KAAK,CAACK,KAAjC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEL,KAAK,CAACI,EADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEJ,KAAK,CAACM,QAHlB;AAIE,IAAA,IAAI,EAAEN,KAAK,CAACO,IAJd;AAKE,IAAA,SAAS,EAAC,cALZ;AAME,IAAA,KAAK,EAAEP,KAAK,CAACQ,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAYGR,KAAK,CAACE,KAAN,IAAe;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCF,KAAK,CAACE,KAA3C,CAZlB,CADF;AAgBD;;AAEDH,SAAS,CAACU,SAAV,GAAsB;AACpBL,EAAAA,EAAE,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADD;AAEpBJ,EAAAA,IAAI,EAAET,SAAS,CAACY,MAAV,CAAiBC,UAFH;AAGpBN,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAHJ;AAIpBL,EAAAA,QAAQ,EAAER,SAAS,CAACY,MAAV,CAAiBC,UAJP;AAKpBH,EAAAA,KAAK,EAAEV,SAAS,CAACY,MALG;AAMpBR,EAAAA,KAAK,EAAEJ,SAAS,CAACY;AANG,CAAtB;AASAX,SAAS,CAACa,YAAV,GAAyB;AACvBV,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAIA,eAAeH,SAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TextInput(props) {\r\n  let wrapperClass = \"form-group\";\r\n\r\n  if (props.error.length > 0) {\r\n    wrapperClass += \" has-error\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          className=\"form-control\"\r\n          value={props.value}\r\n        />\r\n      </div>\r\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  error: \"\"\r\n};\r\n\r\nexport default TextInput;\r\n"]},"metadata":{},"sourceType":"module"}